name: Github Actions Pipelines with Maven

on:
  schedule:
    - cron:  '5 4 * JAN-DEC *'
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  compile:
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macOS-latest]
      fail-fast: false
    runs-on: ${{ matrix.os }}
    name: Maven Compile
    steps:
      - name: Checkout Source Code
        uses: actions/checkout@v2
      
      - name: Set up JDK 11
        uses: actions/setup-java@v2
        with:
          distribution: 'adopt'
          java-version: '11'
          java-package: jdk
      
      - name: Compile the Project
        run: mvn -B compile

  build:
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macOS-latest]
      fail-fast: false
    runs-on: ${{ matrix.os }}
    needs: compile
    name: Maven Build
    steps:
      - uses: actions/checkout@v2
      - uses: actions/cache@v2
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-
      
      - name: Set up JDK 11
        uses: actions/setup-java@v2
        with:
          distribution: 'adopt'
          java-version: '11'
          java-package: jdk
      
      - name: Build, Test, and Package Project
        run: mvn -B package --file pom.xml
        
  docker-image:
    runs-on: ubuntu-latest
    needs: build
    name: Build & Push Docker Image
    steps:
      - uses: actions/checkout@v2
        name: Checkout Source Code
      
      - name: Set up JDK 11
        uses: actions/setup-java@v2
        with:
          distribution: 'adopt'
          java-version: '11'
          java-package: jdk
      
      - name: Build with Maven
        run: mvn clean install
      
      - uses: mr-smithers-excellent/docker-build-push@v5
        name: Build and Push Docker Image
        with:
          image: bondopangaji/spring-boot-web-app-ci-cd
          tags: latest
          registry: docker.io
          dockerfile: Dockerfile
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
